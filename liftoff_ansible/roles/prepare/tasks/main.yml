---
# Role for installing/configuring required prerequisites for ec2 instances.

- name: Install the daemon
  ansible.builtin.yum:
    name: chrony
    state: installed

- name: Copy the conf file to /etc/chrony.conf
  ansible.builtin.copy:
    src: chrony.conf
    dest: /etc/chrony.conf
    mode: u=rw,g=r,o=r

- name: Enable and Start the chronyd service
  ansible.builtin.service:
    name: chronyd
    state: started
    enabled: true

- name: Set the default time zone
  ansible.builtin.command: timedatectl set-timezone "Asia/Chennai"
  register: result
  failed_when: result.rc != 0
  changed_when: true
  notify:
    - Check Chrony Status

- name: Install clamav and clamd on ec2 instances
  ansible.builtin.yum:
    name: "{{item}}"
    state: present
    loop:
      - clamav
      - clamav-database
      - clamd

- name: Set up clamd as a service
  ansible.builtin.systemd:
    name: clamd
    state: started
    enabled: true
  notify:
    - Check clamd status

- name: Set up clamav-freshclam
  ansible.builtin.systemd:
    name: clamav-freshclam
    state: started
    enabled: true
  notify:
    - Check freshclam status

- name: Create a temp directory for aws inspector
  ansible.builtin.file:
    path: /tmp/aws-inspector
    state: directory
    mode: 0755

- name: Download aws inspector agent
  ansible.builtin.get_url:
    url: https://inspector-agent.amazonaws.com/linux/latest/install
    dest: /tmp/aws-inspector/install.sh
    mode: 0755

- name: Run the aws inspector agent install script
  become: true
  become_user: root
  ansible.builtin.shell: /tmp/aws-inspector/install.sh

- name: Remove aws inspector install script
  ansible.builtin.file:
    path: /tmp/aws-inspector/install.sh
    state: absent

- name: Start the aws inspector daemon
  ansible.builtin.systemd:
    name: aws-inspector-agent
    state: started
    enabled: true
  notify:
   - Check AWS Inspector Status
  
- name: Remove aws inspector install script
  ansible.builtin.file:
    path: /tmp/aws-inspector/install.sh
    state: absent

- name: Enable selinux support
  ansible.posix.selinux:
    state: permissive
    policy: targeted
  notify:
    - Check firewalld status
