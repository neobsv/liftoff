---
# Role to install the kubernetes master node on an ec2 instance
- name: Disable selinux support
  ansible.posix.selinux:
    state: disabled

- name: Run command to disable swap
  become: true
  become_user: root
  ansible.builtin.shell: |
    swapoff -a
    $(crontab -l 2>/dev/null; echo "@reboot /sbin/swapoff -a") | crontab - || true

- name: Add kubernetes repositories to yum
  become: true
  become_user: root
  ansible.builtin.shell: |
    export VERSION={{ kubernetes_version }}
    cat <<EOF | tee /etc/yum.repos.d/kubernetes.repo
    [kubernetes]
    name=Kubernetes
    baseurl=https://pkgs.k8s.io/core:/stable:/v$VERSION/rpm/
    enabled=1
    gpgcheck=1
    gpgkey=https://pkgs.k8s.io/core:/stable:/v$VERSION/rpm/repodata/repomd.xml.key
    exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
    EOF

- name: Update yum repositories
  become: true
  become_user: root
  ansible.builtin.yum:
    name: "*"
    state: latest

- name: Install k8s components using yum
  become: true
  become_user: root
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
    loop:
      - curl
      - kubelet={{ kubernetes_version }}
      - kubeadm={{ kubernetes_version }}
      - kubectl={{ kubernetes_version }}
    disableexcludes: kubernetes

- name: Version lock the kubernetes components
  community.general.yum_versionlock:
    name: "{{ item }}"
    state: present
    loop:
      - kubelet
      - kubeadm
      - kubectl

- name: Enable the kubelet
  become: true
  become_user: root
  ansible.builtin.systemd:
    name: kubelet
    enabled: true
    state: started

- name: Set the variables required for kubeadm init
  ansible.builtin.shell: |
    export IPADDR=$(curl ifconfig.me && echo "")
    export NODENAME=$(hostname -s)
    export POD_CIDR="{{ pod_cidr }}"

- name: Run kubeadm init command for a private network
  become: true
  become_user: root
  ansible.builtin.command: |
    kubeadm init --apiserver-advertise-address=$IPADDR  --apiserver-cert-extra-sans=$IPADDR  --pod-network-cidr=$POD_CIDR --node-name $NODENAME --ignore-preflight-errors Swap

- name: Make .kube directory
  become: true
  become_user: root
  ansible.builtin.file:
    path: ~/.kube
    state: directory

- name: Copy kubeconfig to .kube directory
  become: true
  become_user: root
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config

- name: Run kubectl command to add the control plane taint
  ansible.builtin.shell: |
    kubectl taint nodes --all node-role.kubernetes.io/control-plane-

- name: Print join command
  ansible.builtin.shell: |
    kubeadm token create --print-join-command >> /tmp/join.txt

- name: Transfer join command file to jump host
  ansible.posix.synchronize:
    src: /tmp/join.txt
    dest: /tmp/join.txt
    mode: pull
  delegate_to: {{ jump_host }}

- name: Install Calico on the kubernetes cluster
  ansible.builtin.shell: |
    kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

- name: Install the metrics server for the kubernetes cluster
  ansible.builtin.shell: |
   kubectl apply -f https://raw.githubusercontent.com/techiescamp/kubeadm-scripts/main/manifests/metrics-server.yaml

- name: Check if metrics server is installed
  ansible.builtin.command: kubectl top nodes
  register: metrics_server_status
  failed_when: metrics_server_status.rc != 0
